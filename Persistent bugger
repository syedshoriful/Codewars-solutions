Write a function, persistence, that takes in a positive parameter num and returns its multiplicative persistence, which is the number of times you must multiply the digits in num until you reach a single digit.

For example (Input --> Output):

39 --> 3 (because 3*9 = 27, 2*7 = 14, 1*4 = 4 and 4 has only one digit)
999 --> 4 (because 9*9*9 = 729, 7*2*9 = 126, 1*2*6 = 12, and finally 1*2 = 2)
4 --> 0 (because 4 is already a one-digit number)

ef persistence(n):
    for value in range(0,10):
        if n == value:
            print(0)
            break
    else:
            loop_ran=0
            is_single = False
            while not is_single:
                listed_value = list(str(n))
                result = 1
                for numbers in listed_value:
                    result *= int(numbers)
                loop_ran+=1
                for value in range(0, 10):
                    if result == value:
                        print(loop_ran)
                        is_single = True
                else:
                    n = result

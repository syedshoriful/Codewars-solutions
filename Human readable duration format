Your task in order to complete this Kata is to write a function which formats a duration, given as a number of seconds, in a human-friendly way.

The function must accept a non-negative integer. If it is zero, it just returns "now". Otherwise, the duration is expressed as a combination of years, days, hours, minutes and seconds.

It is much easier to understand with an example:

* For seconds = 62, your function should return 
    "1 minute and 2 seconds"
* For seconds = 3662, your function should return
    "1 hour, 1 minute and 2 seconds"
For the purpose of this Kata, a year is 365 days and a day is 24 hours.

Note that spaces are important.

Detailed rules
The resulting expression is made of components like 4 seconds, 1 year, etc. In general, a positive integer and one of the valid units of time, separated by a space. The unit of time is used in plural if the integer is greater than 1.

The components are separated by a comma and a space (", "). Except the last component, which is separated by " and ", just like it would be written in English.

A more significant units of time will occur before than a least significant one. Therefore, 1 second and 1 year is not correct, but 1 year and 1 second is.

Different components have different unit of times. So there is not repeated units like in 5 seconds and 1 second.

A component will not appear at all if its value happens to be zero. Hence, 1 minute and 0 seconds is not valid, but it should be just 1 minute.

A unit of time must be used "as much as possible". It means that the function should not return 61 seconds, but 1 minute and 1 second instead. Formally, the duration specified by of a component must not be greater than any valid more significant unit of time.

#Solution 
def format_duration(seconds):

    n = seconds

    list_of_calculated_values = []
    if n == 0:
        return 'now'
    elif n>0:
        #To calculate year
        if n>= 31536000:
            year = n // 31536000
            n = n % 31536000
            if year==1:
                list_of_calculated_values.append(str(year)+' year')
            elif year>1:
                list_of_calculated_values.append(str(year)+' years')

        #To calculate year
        if n>= 86400:
            day = n // 86400
            n = n % 86400
            if day==1:
                list_of_calculated_values.append(str(day)+' day')
            elif day>1:
                list_of_calculated_values.append(str(day)+' days')
        #To calculate hour
        if 3600<= n <86400:
            hour = n // 3600
            n = n % 3600
            if hour==1:
                list_of_calculated_values.append(str(hour)+' hour')
            elif hour>1:
                list_of_calculated_values.append(str(hour)+' hours')
        #To calculate minute
        if 60 <= n < 3600:
            minute = n // 60
            n = n % 60
            if minute==1:
                list_of_calculated_values.append(str(minute)+' minute')
            elif minute>1:
                list_of_calculated_values.append(str(minute)+' minutes')
        #To calculate second
        if 0<n < 60:
            if n==1:
                list_of_calculated_values.append(str(n)+' second')
            elif n>1:
                list_of_calculated_values.append(str(n)+' seconds')
    result = ''
    for value in list_of_calculated_values:
        if list_of_calculated_values.index(value)!=(len(list_of_calculated_values)-2):
            result+=value
            if list_of_calculated_values.index(value)!= (len(list_of_calculated_values)-1):
                result+=', '
        elif list_of_calculated_values.index(value) == (len(list_of_calculated_values) - 2):
            result+=value+' and '

    return result
    #(list_of_calculated_values)
    print(len(list_of_calculated_values))
